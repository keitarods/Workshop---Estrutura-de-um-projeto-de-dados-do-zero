{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#workflow","title":"Workflow","text":"<p>mermaid</p> <pre><code>gantt\ndateFormat  YYYY-MM-DD\ntitle Adding GANTT diagram to mermaid\nexcludes weekdays 2014-01-10\n\nsection A section\nCompleted task            :done,    des1, 2014-01-06,2014-01-08\nActive task               :active,  des2, 2014-01-09, 3d\nFuture task               :         des3, after des2, 5d\nFuture task2               :         des4, after des3, 5d\n</code></pre>"},{"location":"#funcao-de-transformacao-de-dados","title":"Fun\u00e7\u00e3o de transforma\u00e7\u00e3o de dados","text":"<p>Fun\u00e7\u00e3o para ler os arquivos de uma pasta data/input e retornar uma lista de dataframes;</p> <p>args: input_path (str): caminho das pastas com os arquivos</p> <p>return: lista de dataframes</p> Source code in <code>app/pipeline/extract.py</code> <pre><code>def extract_from_excel(path: str) -&gt; List[pd.DataFrame]:\n    \"\"\"\n    Fun\u00e7\u00e3o para ler os arquivos de uma pasta data/input e retornar uma lista de dataframes;\n\n    args: input_path (str): caminho das pastas com os arquivos\n\n    return: lista de dataframes\n    \"\"\"\n\n    all_files = glob.glob(os.path.join(path, '*.xlsx'))\n\n    data_frame_list = []\n    for file in all_files:\n        data_frame_list.append(pd.read_excel(file))\n\n    return data_frame_list\n</code></pre>"}]}